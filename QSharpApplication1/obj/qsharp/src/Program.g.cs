//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SwapTest\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q0\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":20},\"Item2\":{\"Line\":1,\"Column\":22}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q1\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":35}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SwapTest\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SignMessage\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"message\"]},\"Type\":{\"Case\":\"Bool\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Bool\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SignMessage\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"CheckSignature\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":42,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"message\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":33}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"publicKeys\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":55}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]}]]},\"ReturnType\":{\"Case\":\"String\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"CheckSignature\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":42,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"FormPublicKeys\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":62,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"keys\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"FormPublicKeys\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":62,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"QuantumHashing\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":72,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"input\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":31}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"QuantumHashing\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":72,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"Execute\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":93,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":94,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"Execute\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":94,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.QSharpApplication1
{
    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 8, 25)]
    public partial class SwapTest : Operation<(IQArray<Qubit>,IQArray<Qubit>), Boolean>, ICallable
    {
        public SwapTest(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "SwapTest";
        String ICallable.FullName => "Quantum.QSharpApplication1.SwapTest";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> SWAP__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<Result, Boolean> Microsoft__Quantum__Canon__IsResultOne
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Qubit>), Boolean> __Body__ => (__in__) =>
        {
            var (q0,q1) = __in__;
#line 9 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            if (((q0.Length != q1.Length) || (q0.Length == 0L)))
            {
#line 10 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                return false;
            }

#line 12 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var result = true;
#line 13 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(0L, (q0.Length - 1L)))
#line hidden
            {
#line hidden
                {
#line 14 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    var qubit = Allocate__.Apply();
#line hidden
                    bool __arg1__ = true;
                    try
                    {
#line 15 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qubit);
#line 16 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        SWAP__.Controlled.Apply((new QArray<Qubit>(qubit), (q0[i], q1[i])));
#line 17 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        var value = Microsoft__Quantum__Intrinsic__M.Apply(qubit);
#line 18 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        if (Microsoft__Quantum__Canon__IsResultOne.Apply(value))
                        {
#line 19 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                            result = false;
                        }
                    }
#line hidden
                    catch
                    {
                        __arg1__ = false;
                        throw;
                    }
#line hidden
                    finally
                    {
                        if (__arg1__)
                        {
#line hidden
                            Release__.Apply(qubit);
                        }
                    }
                }
            }

#line 22 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.SWAP__ = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.SWAP));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Microsoft__Quantum__Canon__IsResultOne = this.__Factory__.Get<ICallable<Result, Boolean>>(typeof(global::Microsoft.Quantum.Canon.IsResultOne));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<Qubit> q0, IQArray<Qubit> q1)
        {
            return __m__.Run<SwapTest, (IQArray<Qubit>,IQArray<Qubit>), Boolean>((q0, q1));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 25, 43)]
    public partial class SignMessage : Operation<Boolean, IQArray<IQArray<Boolean>>>, ICallable
    {
        public SignMessage(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SignMessage";
        String ICallable.FullName => "Quantum.QSharpApplication1.SignMessage";
        public override Func<Boolean, IQArray<IQArray<Boolean>>> __Body__ => (__in__) =>
        {
            var message = __in__;
#line 26 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var k01 = (IQArray<Boolean>)new QArray<Boolean>(true, false, false);
#line 27 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var k02 = (IQArray<Boolean>)new QArray<Boolean>(true, false, true);
#line 28 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var k11 = (IQArray<Boolean>)new QArray<Boolean>(true, true, false);
#line 29 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var k12 = (IQArray<Boolean>)new QArray<Boolean>(true, true, true);
#line 30 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var k0 = new QArray<Boolean>(false, false, false);
#line 31 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var k1 = new QArray<Boolean>(false, false, false);
#line 32 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            if ((message == false))
            {
#line 33 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                k0 = new QArray<Boolean>(k01);
#line 34 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                k1 = new QArray<Boolean>(k02);
            }
            else
            {
#line 37 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                k0 = new QArray<Boolean>(k11);
#line 38 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                k1 = new QArray<Boolean>(k12);
            }

#line 40 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            return new QArray<IQArray<Boolean>>(new QArray<Boolean>(message), k0?.Copy(), k1?.Copy());
        }

        ;
        public override void __Init__()
        {
        }

        public override IApplyData __DataIn__(Boolean data) => new QTuple<Boolean>(data);
        public override IApplyData __DataOut__(IQArray<IQArray<Boolean>> data) => data;
        public static System.Threading.Tasks.Task<IQArray<IQArray<Boolean>>> Run(IOperationFactory __m__, Boolean message)
        {
            return __m__.Run<SignMessage, Boolean, IQArray<IQArray<Boolean>>>(message);
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 43, 63)]
    public partial class CheckSignature : Operation<(IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>), String>, ICallable
    {
        public CheckSignature(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>)>, IApplyData
        {
            public In((IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item2)?.Qubits;
                }
            }
        }

        String ICallable.Name => "CheckSignature";
        String ICallable.FullName => "Quantum.QSharpApplication1.CheckSignature";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Boolean>, IQArray<Qubit>> QuantumHashing__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), Boolean> SwapTest__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<(IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>), String> __Body__ => (__in__) =>
        {
            var (message,publicKeys) = __in__;
#line 44 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var s = 0L;
#line 45 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var c1 = 0L;
#line 46 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var c2 = 0.9D;
#line 47 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(1L, (message.Length - 1L)))
#line hidden
            {
#line 48 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                var key = (IQArray<Qubit>)QuantumHashing__.Apply(message[i]);
#line 49 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                if (!(SwapTest__.Apply((key, publicKeys[i]))))
                {
#line 50 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    s = (s + 1L);
                }
            }

#line 53 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var result = "Valid, not transferable";
#line 54 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            if ((s <= (c1 * 2L)))
            {
#line 55 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                result = "Valid, transferable";
            }

#line 57 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            if ((Microsoft__Quantum__Convert__IntAsDouble.Apply(s) >= (c2 * 2D)))
            {
#line 58 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                result = "Invalid";
            }

#line 60 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.QuantumHashing__ = this.__Factory__.Get<ICallable<IQArray<Boolean>, IQArray<Qubit>>>(typeof(QuantumHashing));
            this.SwapTest__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), Boolean>>(typeof(SwapTest));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__((IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>) data) => new In(data);
        public override IApplyData __DataOut__(String data) => new QTuple<String>(data);
        public static System.Threading.Tasks.Task<String> Run(IOperationFactory __m__, IQArray<IQArray<Boolean>> message, IQArray<IQArray<Qubit>> publicKeys)
        {
            return __m__.Run<CheckSignature, (IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>), String>((message, publicKeys));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 63, 73)]
    public partial class FormPublicKeys : Operation<IQArray<IQArray<Boolean>>, IQArray<IQArray<Qubit>>>, ICallable
    {
        public FormPublicKeys(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "FormPublicKeys";
        String ICallable.FullName => "Quantum.QSharpApplication1.FormPublicKeys";
        protected ICallable<IQArray<Boolean>, IQArray<Qubit>> QuantumHashing__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<IQArray<IQArray<Boolean>>, IQArray<IQArray<Qubit>>> __Body__ => (__in__) =>
        {
            var keys = __in__;
#line 64 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var result = new QArray<IQArray<Qubit>>(QuantumHashing__.Apply(keys[0L]));
#line 65 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(1L, (keys.Length - 1L)))
#line hidden
            {
#line 66 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                var hash = (IQArray<Qubit>)QuantumHashing__.Apply(keys[i]);
#line 67 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                result = QArray<IQArray<Qubit>>.Add(result, new QArray<IQArray<Qubit>>(QuantumHashing__.Apply(keys[i])));
            }

#line 69 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.QuantumHashing__ = this.__Factory__.Get<ICallable<IQArray<Boolean>, IQArray<Qubit>>>(typeof(QuantumHashing));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__(IQArray<IQArray<Boolean>> data) => data;
        public override IApplyData __DataOut__(IQArray<IQArray<Qubit>> data) => data;
        public static System.Threading.Tasks.Task<IQArray<IQArray<Qubit>>> Run(IOperationFactory __m__, IQArray<IQArray<Boolean>> keys)
        {
            return __m__.Run<FormPublicKeys, IQArray<IQArray<Boolean>>, IQArray<IQArray<Qubit>>>(keys);
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 73, 95)]
    public partial class QuantumHashing : Operation<IQArray<Boolean>, IQArray<Qubit>>, ICallable
    {
        public QuantumHashing(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "QuantumHashing";
        String ICallable.FullName => "Quantum.QSharpApplication1.QuantumHashing";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<IQArray<Boolean>, IQArray<Qubit>> __Body__ => (__in__) =>
        {
            var input = __in__;
#line hidden
            {
#line 74 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                var qubit = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 75 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    var m = 0D;
#line 76 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    if (input[0L])
                    {
#line 77 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                        m = 1D;
                    }

#line 79 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__Rx.Apply(((((2D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * m) / 3D), qubit));
#line 80 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    var result = new QArray<Qubit>(qubit);
#line 81 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(1L, (input.Length - 1L)))
#line hidden
                    {
#line hidden
                        {
#line 82 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                            var newQubit = Allocate__.Apply();
#line hidden
                            bool __arg2__ = true;
                            try
                            {
#line 83 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                                if (input[i])
                                {
#line 84 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                                    m = 1D;
                                }
                                else
                                {
#line 87 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                                    m = 0D;
                                }

#line 89 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                                Microsoft__Quantum__Intrinsic__Rx.Apply((((((2D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * m) * Microsoft__Quantum__Convert__IntAsDouble.Apply(i)) / 3D), newQubit));
#line 90 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                                result = QArray<Qubit>.Add(result, new QArray<Qubit>(newQubit));
                            }
#line hidden
                            catch
                            {
                                __arg2__ = false;
                                throw;
                            }
#line hidden
                            finally
                            {
                                if (__arg2__)
                                {
#line hidden
                                    Release__.Apply(newQubit);
                                }
                            }
                        }
                    }

#line 92 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    return result;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qubit);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__(IQArray<Boolean> data) => data;
        public override IApplyData __DataOut__(IQArray<Qubit> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Qubit>> Run(IOperationFactory __m__, IQArray<Boolean> input)
        {
            return __m__.Run<QuantumHashing, IQArray<Boolean>, IQArray<Qubit>>(input);
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 95, -1)]
    public partial class Execute : Operation<QVoid, QVoid>, ICallable
    {
        public Execute(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Execute";
        String ICallable.FullName => "Quantum.QSharpApplication1.Execute";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(Execute));
        protected ICallable<Boolean, IQArray<IQArray<Boolean>>> SignMessage__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<IQArray<IQArray<Boolean>>, IQArray<IQArray<Qubit>>> FormPublicKeys__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>), String> CheckSignature__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 96 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var message = false;
#line 97 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var singnedMessage = (IQArray<IQArray<Boolean>>)SignMessage__.Apply(message);
#line 98 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var privateKeys = (IQArray<IQArray<Boolean>>)singnedMessage.Slice(new QRange(1L, (singnedMessage.Length - 1L)));
#line 99 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var publicKeys = (IQArray<IQArray<Qubit>>)FormPublicKeys__.Apply(privateKeys);
#line 100 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var result = CheckSignature__.Apply((singnedMessage, publicKeys));
#line 101 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(0L, publicKeys.Length))
#line hidden
            {
#line 102 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                ResetAll__.Apply(publicKeys[i]);
            }

#line 104 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var message1 = true;
#line 105 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var singnedMessage1 = (IQArray<IQArray<Boolean>>)SignMessage__.Apply(message);
#line 106 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var privateKeys1 = (IQArray<IQArray<Boolean>>)singnedMessage.Slice(new QRange(1L, (singnedMessage.Length - 1L)));
#line 107 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var publicKeys1 = (IQArray<IQArray<Qubit>>)FormPublicKeys__.Apply(privateKeys);
#line 108 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var result1 = CheckSignature__.Apply((singnedMessage, publicKeys));
#line 109 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(0L, publicKeys.Length))
#line hidden
            {
#line 110 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                ResetAll__.Apply(publicKeys[i]);
            }

#line 112 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            Message__.Apply(result1);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.SignMessage__ = this.__Factory__.Get<ICallable<Boolean, IQArray<IQArray<Boolean>>>>(typeof(SignMessage));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.FormPublicKeys__ = this.__Factory__.Get<ICallable<IQArray<IQArray<Boolean>>, IQArray<IQArray<Qubit>>>>(typeof(FormPublicKeys));
            this.CheckSignature__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Boolean>>,IQArray<IQArray<Qubit>>), String>>(typeof(CheckSignature));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<Execute, QVoid, QVoid>(QVoid.Instance);
        }
    }
}