//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SwapTest\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q0\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":20},\"Item2\":{\"Line\":1,\"Column\":22}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"q1\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":35}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SwapTest\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SignMessage\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"message\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":30}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":37},\"Item2\":{\"Line\":1,\"Column\":43}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"lengthOfWord\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":50},\"Item2\":{\"Line\":1,\"Column\":62}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"count\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":69},\"Item2\":{\"Line\":1,\"Column\":74}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SignMessage\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"MakeAllPossibleArraysOfGivenSystemAndLength\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":54}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":55},\"Item2\":{\"Line\":1,\"Column\":61}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"length\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":68},\"Item2\":{\"Line\":1,\"Column\":74}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"MakeAllPossibleArraysOfGivenSystemAndLength\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":54}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"RealCheckSignature\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"privateKeys\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":41}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"publicKeys\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":52},\"Item2\":{\"Line\":1,\"Column\":62}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":74},\"Item2\":{\"Line\":1,\"Column\":80}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"lgt1\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":86},\"Item2\":{\"Line\":1,\"Column\":90}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"RealCheckSignature\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"RealQuantumHashing\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":97,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"originalInput\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":30},\"Item2\":{\"Line\":1,\"Column\":43}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":54},\"Item2\":{\"Line\":1,\"Column\":60}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubits\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":67},\"Item2\":{\"Line\":1,\"Column\":73}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"lgt1\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":83},\"Item2\":{\"Line\":1,\"Column\":87}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"RealQuantumHashing\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":97,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"ConvertFromAnySystemToDeca\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":117,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":36}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"input\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":37},\"Item2\":{\"Line\":1,\"Column\":42}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":51},\"Item2\":{\"Line\":1,\"Column\":57}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Double\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"ConvertFromAnySystemToDeca\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":117,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":36}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"ConvertOneNumberFromAnySystemToDeca\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":125,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":45}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"input\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":46},\"Item2\":{\"Line\":1,\"Column\":51}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":58},\"Item2\":{\"Line\":1,\"Column\":64}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"ConvertOneNumberFromAnySystemToDeca\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":125,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":45}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"ConvertFromDecaToBooleanArray\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":138,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":39}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"input\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":45}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"initialSystem\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":52},\"Item2\":{\"Line\":1,\"Column\":65}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"ConvertFromDecaToBooleanArray\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":138,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":39}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"QuantumRandomNumberGenerator\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":168,\"Item2\":5},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"QuantumRandomNumberGenerator\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":168,\"Item2\":5},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"BB84\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":178,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"count\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":21}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"BB84\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":178,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"RealExecute\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":245,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":246,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"system\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":29}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"lengthOfWord\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":36},\"Item2\":{\"Line\":1,\"Column\":48}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"countOfWords\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":55},\"Item2\":{\"Line\":1,\"Column\":67}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"countOfQubitsForBB84\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":74},\"Item2\":{\"Line\":1,\"Column\":94}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"RealExecute\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\timur\\\\source\\\\repos\\\\QSharpApplication1\\\\QDS\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":246,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.QSharpApplication1
{
    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 8, 26)]
    public partial class SwapTest : Operation<(IQArray<Qubit>,IQArray<Qubit>), Boolean>, ICallable
    {
        public SwapTest(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "SwapTest";
        String ICallable.FullName => "Quantum.QSharpApplication1.SwapTest";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> SWAP__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<Result, Boolean> Microsoft__Quantum__Canon__IsResultOne
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Qubit>), Boolean> __Body__ => (__in__) =>
        {
            var (q0,q1) = __in__;
#line 9 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            if (((q0.Length != q1.Length) || (q0.Length == 0L)))
            {
#line 10 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                return false;
            }

#line 12 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var result = true;
#line 13 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(0L, (q0.Length - 1L)))
#line hidden
            {
#line hidden
                {
#line 14 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var qubit = Allocate__.Apply();
#line hidden
                    bool __arg1__ = true;
                    try
                    {
#line 15 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qubit);
#line 16 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        SWAP__.Controlled.Apply((new QArray<Qubit>(qubit), (q0[i], q1[i])));
#line 17 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qubit);
#line 18 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var value = Microsoft__Quantum__Intrinsic__M.Apply(qubit);
#line 19 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if (Microsoft__Quantum__Canon__IsResultOne.Apply(value))
                        {
#line 20 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            result = false;
                        }
                    }
#line hidden
                    catch
                    {
                        __arg1__ = false;
                        throw;
                    }
#line hidden
                    finally
                    {
                        if (__arg1__)
                        {
#line hidden
                            Release__.Apply(qubit);
                        }
                    }
                }
            }

#line 23 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.SWAP__ = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.SWAP));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Microsoft__Quantum__Canon__IsResultOne = this.__Factory__.Get<ICallable<Result, Boolean>>(typeof(global::Microsoft.Quantum.Canon.IsResultOne));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<Qubit> q0, IQArray<Qubit> q1)
        {
            return __m__.Run<SwapTest, (IQArray<Qubit>,IQArray<Qubit>), Boolean>((q0, q1));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 26, 37)]
    public partial class SignMessage : Operation<(Int64,Int64,Int64,Int64), IQArray<IQArray<Int64>>>, ICallable
    {
        public SignMessage(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "SignMessage";
        String ICallable.FullName => "Quantum.QSharpApplication1.SignMessage";
        protected ICallable<(Int64,Int64), IQArray<IQArray<Int64>>> MakeAllPossibleArraysOfGivenSystemAndLength__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Int64,Int64), IQArray<IQArray<Int64>>> __Body__ => (__in__) =>
        {
            var (message,system,lengthOfWord,count) = __in__;
#line 27 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var keys = (IQArray<IQArray<Int64>>)MakeAllPossibleArraysOfGivenSystemAndLength__.Apply((system, lengthOfWord));
#line 28 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            if ((((count * 2L) < keys.Length) || ((message != 0L) && (message != 1L))))
            {
#line 29 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                return new QArray<IQArray<Int64>>(new QArray<Int64>(0L));
            }

#line 31 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            if ((message == 0L))
            {
#line 32 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                return keys.Slice(new QRange(0L, (count - 1L)));
            }

#line 34 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            return keys.Slice(new QRange(count, ((count * 2L) - 1L)));
        }

        ;
        public override void __Init__()
        {
            this.MakeAllPossibleArraysOfGivenSystemAndLength__ = this.__Factory__.Get<ICallable<(Int64,Int64), IQArray<IQArray<Int64>>>>(typeof(MakeAllPossibleArraysOfGivenSystemAndLength));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__((Int64,Int64,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<IQArray<Int64>> data) => data;
        public static System.Threading.Tasks.Task<IQArray<IQArray<Int64>>> Run(IOperationFactory __m__, Int64 message, Int64 system, Int64 lengthOfWord, Int64 count)
        {
            return __m__.Run<SignMessage, (Int64,Int64,Int64,Int64), IQArray<IQArray<Int64>>>((message, system, lengthOfWord, count));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 37, 55)]
    public partial class MakeAllPossibleArraysOfGivenSystemAndLength : Operation<(Int64,Int64), IQArray<IQArray<Int64>>>, ICallable
    {
        public MakeAllPossibleArraysOfGivenSystemAndLength(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "MakeAllPossibleArraysOfGivenSystemAndLength";
        String ICallable.FullName => "Quantum.QSharpApplication1.MakeAllPossibleArraysOfGivenSystemAndLength";
        protected ICallable<(Int64,Int64), Int64> Microsoft__Quantum__Math__PowI
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), IQArray<IQArray<Int64>>> __Body__ => (__in__) =>
        {
            var (system,length) = __in__;
#line 38 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
#line hidden
            var __arg2__ = 0L;
#line 38 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
#line hidden
            var __arg1__ = QArray.Filled(() => __arg2__, length);
#line 38 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var result = new QArray<IQArray<Int64>>(QArray.Filled(() => __arg1__, Microsoft__Quantum__Math__PowI.Apply((2L, length))));
#line 39 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(0L, (Microsoft__Quantum__Math__PowI.Apply((2L, length)) - 1L)))
#line hidden
            {
#line 40 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                foreach (var j in new QRange(0L, i))
#line hidden
                {
#line 41 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var n in new QRange(0L, (length - 1L)))
#line hidden
                    {
#line 42 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if ((result[j][((length - n) - 1L)] < (system - 1L)))
                        {
#line 43 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            var tmp = new QArray<Int64>(result[j]);
#line 44 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            tmp.Modify(((length - n) - 1L), 1L);
#line 45 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            result.Modify(j, tmp?.Copy());
                        }
                    }
                }
            }

#line 50 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__PowI = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.PowI));
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<IQArray<Int64>> data) => data;
        public static System.Threading.Tasks.Task<IQArray<IQArray<Int64>>> Run(IOperationFactory __m__, Int64 system, Int64 length)
        {
            return __m__.Run<MakeAllPossibleArraysOfGivenSystemAndLength, (Int64,Int64), IQArray<IQArray<Int64>>>((system, length));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 55, 98)]
    public partial class RealCheckSignature : Operation<(IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64), Int64>, ICallable
    {
        public RealCheckSignature(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64)>, IApplyData
        {
            public In((IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item2)?.Qubits;
                }
            }
        }

        String ICallable.Name => "RealCheckSignature";
        String ICallable.FullName => "Quantum.QSharpApplication1.RealCheckSignature";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid> RealQuantumHashing__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), Boolean> SwapTest__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<(IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (privateKeys,publicKeys,system,lgt1) = __in__;
#line 56 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var s = 0L;
#line 57 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var c1 = 0L;
#line 58 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var c2 = 0.9D;
#line hidden
            {
#line 59 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var key = Allocate__.Apply(12L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 60 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    RealQuantumHashing__.Apply((privateKeys, system, key, lgt1));
#line 61 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (privateKeys.Length - 1L)))
#line hidden
                    {
#line 62 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if (!(SwapTest__.Apply((key.Slice(new QRange((i * 3L), ((i * 3L) + 2L))), publicKeys.Slice(new QRange((i * 3L), ((i * 3L) + 2L)))))))
                        {
#line 63 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            s = (s + 1L);
                        }
                    }

#line 66 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    ResetAll__.Apply(key);
#line 67 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var result = 0L;
#line 68 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    if ((s <= (c1 * 2L)))
                    {
#line 69 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        result = 1L;
                    }

#line 71 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    if ((Microsoft__Quantum__Convert__IntAsDouble.Apply(s) >= (c2 * 4D)))
                    {
#line 72 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        result = -(1L);
                    }

#line 74 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    return result;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(key);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.RealQuantumHashing__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid>>(typeof(RealQuantumHashing));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.SwapTest__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), Boolean>>(typeof(SwapTest));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__((IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, IQArray<IQArray<Int64>> privateKeys, IQArray<Qubit> publicKeys, Int64 system, Int64 lgt1)
        {
            return __m__.Run<RealCheckSignature, (IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64), Int64>((privateKeys, publicKeys, system, lgt1));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 98, 118)]
    public partial class RealQuantumHashing : Operation<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid>, ICallable
    {
        public RealQuantumHashing(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64)>, IApplyData
        {
            public In((IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item3)?.Qubits;
                }
            }
        }

        String ICallable.Name => "RealQuantumHashing";
        String ICallable.FullName => "Quantum.QSharpApplication1.RealQuantumHashing";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,Int64), Double> ConvertFromAnySystemToDeca__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> Microsoft__Quantum__Math__PowI
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> ConvertOneNumberFromAnySystemToDeca__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), IQArray<Boolean>> ConvertFromDecaToBooleanArray__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ControlledOnBitString
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Ry
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid> __Body__ => (__in__) =>
        {
            var (originalInput,system,qubits,lgt1) = __in__;
#line 99 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var k in new QRange(0L, originalInput.Length))
#line hidden
            {
#line 100 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var q0 = qubits[(k * lgt1)];
#line 101 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var q = (IQArray<Qubit>)qubits.Slice(new QRange(((k * lgt1) + 1L), (((k * lgt1) + lgt1) - 1L)));
#line 102 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                foreach (var qubit in qubits)
#line hidden
                {
#line 103 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(qubit);
                }

#line 105 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var input = (IQArray<Int64>)originalInput[k];
#line 106 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var m = ConvertFromAnySystemToDeca__.Apply((input, system));
#line 107 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                foreach (var i in new QRange(0L, (Microsoft__Quantum__Math__PowI.Apply((system, input.Length)) - 1L)))
#line hidden
                {
#line 108 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var temp = ConvertOneNumberFromAnySystemToDeca__.Apply((i, system));
#line 109 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var control = (IQArray<Boolean>)ConvertFromDecaToBooleanArray__.Apply((temp, system));
#line 110 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Canon__ControlledOnBitString.Apply<IUnitary>((control, Microsoft__Quantum__Intrinsic__Ry.Partial(new Func<Qubit, (Double,Qubit)>((__arg1__) => (((((4D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * m) * Microsoft__Quantum__Convert__IntAsDouble.Apply(i)) / 3D), __arg1__))))).Apply((q, q0));
                }
            }

#line 113 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var qubit in qubits)
#line hidden
            {
#line 114 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                Microsoft__Quantum__Intrinsic__H.Apply(qubit);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.ConvertFromAnySystemToDeca__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,Int64), Double>>(typeof(ConvertFromAnySystemToDeca));
            this.Microsoft__Quantum__Math__PowI = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.PowI));
            this.ConvertOneNumberFromAnySystemToDeca__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(ConvertOneNumberFromAnySystemToDeca));
            this.ConvertFromDecaToBooleanArray__ = this.__Factory__.Get<ICallable<(Int64,Int64), IQArray<Boolean>>>(typeof(ConvertFromDecaToBooleanArray));
            this.Microsoft__Quantum__Canon__ControlledOnBitString = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ControlledOnBitString<>));
            this.Microsoft__Quantum__Intrinsic__Ry = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Ry));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__((IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<IQArray<Int64>> originalInput, Int64 system, IQArray<Qubit> qubits, Int64 lgt1)
        {
            return __m__.Run<RealQuantumHashing, (IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid>((originalInput, system, qubits, lgt1));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 118, 126)]
    public partial class ConvertFromAnySystemToDeca : Function<(IQArray<Int64>,Int64), Double>, ICallable
    {
        public ConvertFromAnySystemToDeca(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,Int64)>, IApplyData
        {
            public In((IQArray<Int64>,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ConvertFromAnySystemToDeca";
        String ICallable.FullName => "Quantum.QSharpApplication1.ConvertFromAnySystemToDeca";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable<(Double,Double), Double> Microsoft__Quantum__Math__PowD
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,Int64), Double> __Body__ => (__in__) =>
        {
            var (input,system) = __in__;
#line 119 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var sum = 0D;
#line 120 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var i in new QRange(0L, (input.Length - 1L)))
#line hidden
            {
#line 121 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                sum = (sum + (Microsoft__Quantum__Convert__IntAsDouble.Apply(input[input[((input.Length - 1L) - i)]]) * Microsoft__Quantum__Math__PowD.Apply((Microsoft__Quantum__Convert__IntAsDouble.Apply(system), Microsoft__Quantum__Convert__IntAsDouble.Apply(i)))));
            }

#line 123 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            return sum;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Math__PowD = this.__Factory__.Get<ICallable<(Double,Double), Double>>(typeof(global::Microsoft.Quantum.Math.PowD));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Double data) => new QTuple<Double>(data);
        public static System.Threading.Tasks.Task<Double> Run(IOperationFactory __m__, IQArray<Int64> input, Int64 system)
        {
            return __m__.Run<ConvertFromAnySystemToDeca, (IQArray<Int64>,Int64), Double>((input, system));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 126, 139)]
    public partial class ConvertOneNumberFromAnySystemToDeca : Function<(Int64,Int64), Int64>, ICallable
    {
        public ConvertOneNumberFromAnySystemToDeca(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ConvertOneNumberFromAnySystemToDeca";
        String ICallable.FullName => "Quantum.QSharpApplication1.ConvertOneNumberFromAnySystemToDeca";
        protected ICallable<(Int64,Int64), Int64> Microsoft__Quantum__Math__PowI
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var (input,system) = __in__;
#line 127 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var sum = 0L;
#line 128 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var x = input;
#line 129 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var i = 0L;
#line 130 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            while ((x != 0L))
            {
#line 131 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var tmp = (x % system);
#line 132 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                sum = (sum + (x * Microsoft__Quantum__Math__PowI.Apply((system, i))));
#line 133 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                x = (x / 2L);
#line 134 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                i = (i + 1L);
            }

#line 136 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            return sum;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__PowI = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.PowI));
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 input, Int64 system)
        {
            return __m__.Run<ConvertOneNumberFromAnySystemToDeca, (Int64,Int64), Int64>((input, system));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 139, 169)]
    public partial class ConvertFromDecaToBooleanArray : Function<(Int64,Int64), IQArray<Boolean>>, ICallable
    {
        public ConvertFromDecaToBooleanArray(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ConvertFromDecaToBooleanArray";
        String ICallable.FullName => "Quantum.QSharpApplication1.ConvertFromDecaToBooleanArray";
        protected ICallable<Double, Int64> Microsoft__Quantum__Math__Ceiling
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__Lg
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64), IQArray<Boolean>> __Body__ => (__in__) =>
        {
            var (input,initialSystem) = __in__;
#line 140 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
#line hidden
            var __arg1__ = false;
#line 140 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var result = new QArray<Boolean>(QArray.Filled(() => __arg1__, Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply(initialSystem)))));
#line 141 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var x = input;
#line 142 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var i = 0L;
#line 143 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            while ((x > 0L))
            {
#line 144 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                if (((x % 2L) == 1L))
                {
#line 145 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    result.Modify(((result.Length - i) - 1L), true);
                }

#line 147 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                x = (x / 2L);
#line 148 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                i = (i + 1L);
            }

#line 150 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            return result;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__Ceiling = this.__Factory__.Get<ICallable<Double, Int64>>(typeof(global::Microsoft.Quantum.Math.Ceiling));
            this.Microsoft__Quantum__Math__Lg = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.Lg));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Boolean> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Boolean>> Run(IOperationFactory __m__, Int64 input, Int64 initialSystem)
        {
            return __m__.Run<ConvertFromDecaToBooleanArray, (Int64,Int64), IQArray<Boolean>>((input, initialSystem));
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 169, 179)]
    public partial class QuantumRandomNumberGenerator : Operation<QVoid, Result>, ICallable
    {
        public QuantumRandomNumberGenerator(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "QuantumRandomNumberGenerator";
        String ICallable.FullName => "Quantum.QSharpApplication1.QuantumRandomNumberGenerator";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        public override Func<QVoid, Result> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 171 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var q = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 174 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q);
#line 176 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    return Microsoft__Quantum__Intrinsic__M.Apply(q);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__)
        {
            return __m__.Run<QuantumRandomNumberGenerator, QVoid, Result>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 179, 247)]
    public partial class BB84 : Operation<Int64, IQArray<Int64>>, ICallable
    {
        public BB84(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "BB84";
        String ICallable.FullName => "Quantum.QSharpApplication1.BB84";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<QVoid, Result> QuantumRandomNumberGenerator__
        {
            get;
            set;
        }

        protected ICallable<Result, Boolean> Microsoft__Quantum__Canon__IsResultOne
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        public override Func<Int64, IQArray<Int64>> __Body__ => (__in__) =>
        {
            var count = __in__;
#line hidden
            {
#line 180 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var qubits = Allocate__.Apply(count);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 181 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, 15L))
#line hidden
                    {
#line 182 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var bit = QuantumRandomNumberGenerator__.Apply(QVoid.Instance);
#line 183 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if (Microsoft__Quantum__Canon__IsResultOne.Apply(bit))
                        {
#line 184 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(qubits[i]);
                        }
                    }

#line 188 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
#line hidden
                    var __arg2__ = 0L;
#line 188 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var b = new QArray<Int64>(QArray.Filled(() => __arg2__, count));
#line 189 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (count - 1L)))
#line hidden
                    {
#line 190 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var tmp = QuantumRandomNumberGenerator__.Apply(QVoid.Instance);
#line 191 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if (Microsoft__Quantum__Canon__IsResultOne.Apply(tmp))
                        {
#line 192 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            b.Modify(i, 1L);
                        }
                    }

#line 196 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (count - 1L)))
#line hidden
                    {
#line 197 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var _base = b[i];
#line 198 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if ((_base == 1L))
                        {
#line 199 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qubits[i]);
                        }
                    }

#line 209 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
#line hidden
                    var __arg3__ = 0L;
#line 209 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var c = new QArray<Int64>(QArray.Filled(() => __arg3__, count));
#line 210 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (count - 1L)))
#line hidden
                    {
#line 211 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var tmp = QuantumRandomNumberGenerator__.Apply(QVoid.Instance);
#line 212 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if (Microsoft__Quantum__Canon__IsResultOne.Apply(tmp))
                        {
#line 213 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            c.Modify(i, 1L);
                        }
                    }

#line 217 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (count - 1L)))
#line hidden
                    {
#line 218 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var _base = c[i];
#line 219 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if ((_base == 1L))
                        {
#line 220 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qubits[i]);
                        }
                    }

#line 225 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var shared_secret = new QArray<Int64>();
#line 226 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (count - 1L)))
#line hidden
                    {
#line 227 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        if ((c[i] == b[i]))
                        {
#line 228 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            var misure = Microsoft__Quantum__Intrinsic__M.Apply(qubits[i]);
#line 229 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            var x = 0L;
#line 230 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            if ((misure == Result.One))
                            {
#line 231 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                                x = 1L;
                            }

#line 233 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                            shared_secret = QArray<Int64>.Add(shared_secret, new QArray<Int64>(x));
                        }
                    }

#line 238 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    foreach (var i in new QRange(0L, (count - 1L)))
#line hidden
                    {
#line 239 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        Reset__.Apply(qubits[i]);
                    }

#line 242 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    return shared_secret;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qubits);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.QuantumRandomNumberGenerator__ = this.__Factory__.Get<ICallable<QVoid, Result>>(typeof(QuantumRandomNumberGenerator));
            this.Microsoft__Quantum__Canon__IsResultOne = this.__Factory__.Get<ICallable<Result, Boolean>>(typeof(global::Microsoft.Quantum.Canon.IsResultOne));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(IQArray<Int64> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Int64>> Run(IOperationFactory __m__, Int64 count)
        {
            return __m__.Run<BB84, Int64, IQArray<Int64>>(count);
        }
    }

    [SourceLocation("C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 247, -1)]
    public partial class RealExecute : Operation<(Int64,Int64,Int64,Int64), QVoid>, ICallable
    {
        public RealExecute(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "RealExecute";
        String ICallable.FullName => "Quantum.QSharpApplication1.RealExecute";
        public static EntryPointInfo<(Int64,Int64,Int64,Int64), QVoid> Info => new EntryPointInfo<(Int64,Int64,Int64,Int64), QVoid>(typeof(RealExecute));
        protected ICallable<Int64, IQArray<Int64>> BB84__
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64,Int64,Int64), IQArray<IQArray<Int64>>> SignMessage__
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__Log
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> Microsoft__Quantum__Math__PowI
        {
            get;
            set;
        }

        protected ICallable<(Double,Double), Double> Microsoft__Quantum__Math__PowD
        {
            get;
            set;
        }

        protected ICallable<Double, Int64> Microsoft__Quantum__Math__Ceiling
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__Lg
        {
            get;
            set;
        }

        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid> RealQuantumHashing__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64), Int64> RealCheckSignature__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Int64,Int64), QVoid> __Body__ => (__in__) =>
        {
            var (system,lengthOfWord,countOfWords,countOfQubitsForBB84) = __in__;
#line 248 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var messages = (IQArray<Int64>)BB84__.Apply(countOfQubitsForBB84);
#line 250 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var results = new QArray<Int64>();
#line 251 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var message in messages)
#line hidden
            {
#line 252 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var privateKeys = (IQArray<IQArray<Int64>>)SignMessage__.Apply((message, system, lengthOfWord, countOfWords));
#line 253 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var t = (Microsoft__Quantum__Math__Log.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply((2L * Microsoft__Quantum__Math__PowI.Apply((lengthOfWord, 2L))))) * (Microsoft__Quantum__Convert__IntAsDouble.Apply(2L) / Microsoft__Quantum__Math__PowD.Apply((0.9D, Microsoft__Quantum__Convert__IntAsDouble.Apply(2L)))));
#line 254 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var lgt1 = (Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(t)) + 1L);
#line hidden
                {
#line 255 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var publicKeys = Allocate__.Apply((lgt1 * privateKeys.Length));
#line hidden
                    bool __arg1__ = true;
                    try
                    {
#line 256 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        RealQuantumHashing__.Apply((privateKeys, system, publicKeys, lgt1));
#line 257 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        var result = RealCheckSignature__.Apply((privateKeys, publicKeys, system, lgt1));
#line 258 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        results = QArray<Int64>.Add(results, new QArray<Int64>(result));
#line 259 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        ResetAll__.Apply(publicKeys);
                    }
#line hidden
                    catch
                    {
                        __arg1__ = false;
                        throw;
                    }
#line hidden
                    finally
                    {
                        if (__arg1__)
                        {
#line hidden
                            Release__.Apply(publicKeys);
                        }
                    }
                }
            }

#line 261 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var isTrasferable = true;
#line 262 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var isValid = true;
#line 263 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            foreach (var res in results?.Copy())
#line hidden
            {
#line 264 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                if ((res == -(1L)))
                {
#line 265 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    isValid = false;
                }
                else if ((res == 0L))
                {
#line 268 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    isTrasferable = false;
                }
            }

#line 271 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            if (!(isValid))
            {
#line 272 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                Message__.Apply("Invalid");
            }
            else if (!(isTrasferable))
            {
#line 275 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                Message__.Apply("Valid, not transferable");
            }
            else
            {
#line 278 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                Message__.Apply("Valid, transferable");
            }

#line 282 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var tt = (Microsoft__Quantum__Math__Log.Apply(Microsoft__Quantum__Convert__IntAsDouble.Apply((2L * Microsoft__Quantum__Math__PowI.Apply((lengthOfWord, 2L))))) * (Microsoft__Quantum__Convert__IntAsDouble.Apply(2L) / Microsoft__Quantum__Math__PowD.Apply((0.9D, Microsoft__Quantum__Convert__IntAsDouble.Apply(2L)))));
#line 283 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
            var lgtt1 = (Microsoft__Quantum__Math__Ceiling.Apply(Microsoft__Quantum__Math__Lg.Apply(tt)) + 1L);
#line hidden
            {
#line 284 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                var privateKey = Allocate__.Apply(lgtt1);
#line hidden
                bool __arg2__ = true;
                try
                {
#line 285 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var m = (IQArray<IQArray<Int64>>)new QArray<IQArray<Int64>>(messages);
#line 286 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    RealQuantumHashing__.Apply((m, 2L, privateKey, lgtt1));
#line 287 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    var result = RealCheckSignature__.Apply((m, privateKey, 2L, lgtt1));
#line 288 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                    if ((result == -(1L)))
                    {
#line 289 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        Message__.Apply("Invalid");
                    }
                    else if ((result == 0L))
                    {
#line 292 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        Message__.Apply("Valid, not transferable");
                    }
                    else
                    {
#line 295 "C:\\Users\\timur\\source\\repos\\QSharpApplication1\\QDS\\QSharpApplication1\\Program.qs"
                        Message__.Apply("Valid, transferable");
                    }
                }
#line hidden
                catch
                {
                    __arg2__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg2__)
                    {
#line hidden
                        Release__.Apply(privateKey);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.BB84__ = this.__Factory__.Get<ICallable<Int64, IQArray<Int64>>>(typeof(BB84));
            this.SignMessage__ = this.__Factory__.Get<ICallable<(Int64,Int64,Int64,Int64), IQArray<IQArray<Int64>>>>(typeof(SignMessage));
            this.Microsoft__Quantum__Math__Log = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.Log));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Math__PowI = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(global::Microsoft.Quantum.Math.PowI));
            this.Microsoft__Quantum__Math__PowD = this.__Factory__.Get<ICallable<(Double,Double), Double>>(typeof(global::Microsoft.Quantum.Math.PowD));
            this.Microsoft__Quantum__Math__Ceiling = this.__Factory__.Get<ICallable<Double, Int64>>(typeof(global::Microsoft.Quantum.Math.Ceiling));
            this.Microsoft__Quantum__Math__Lg = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.Lg));
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.RealQuantumHashing__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Int64>>,Int64,IQArray<Qubit>,Int64), QVoid>>(typeof(RealQuantumHashing));
            this.RealCheckSignature__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Int64>>,IQArray<Qubit>,Int64,Int64), Int64>>(typeof(RealCheckSignature));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__((Int64,Int64,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 system, Int64 lengthOfWord, Int64 countOfWords, Int64 countOfQubitsForBB84)
        {
            return __m__.Run<RealExecute, (Int64,Int64,Int64,Int64), QVoid>((system, lengthOfWord, countOfWords, countOfQubitsForBB84));
        }
    }
}